Notes:

a. Sequencial execution of code my the combution
b. now we can create branches, modify the flow of execution of the program or the set of instruction
c. We do that through the use of if else sattements
d. if eveluates an expression to be either true or false, if the condition

Show this
take 2 numbers a = 10, b = 12
if (a>b)
	{System.uot.println("a wins");}
else{System.uot.println("b wins");}

This is not complete, what if they are equal?
if (a>b)
	{System.uot.println("a wins");}
else if(b<a){System.uot.println("b wins");} //once one of the conditions is satisfied then the program pop out of the checking
else {System.uot.println("a and b are the same");}



Do this,
a. Roll 2 16 sided dice , Dice a and b
b. Inform the user as to which Dice had the larger roll or if the rolls were the same


Relational operators == >= <= !=



 Show this,
 Take 3 numbers a = 10, b = 25, c = 33
 Goal want to print which is the greatest
 
 if(a>b && a>c)
 {
 }
 else if(b>a && b>c)
 {
 }
 else if(c>a && c>b)
 {
 }
 else
 {
 }
 
 Logical operators && || !
 
 
Do this,
a. Roll 3 16 sided dice , Dice a and b and c
b. Inform the user as to which Dice had the larger roll or if the rolls were the same
 
 After talking about logical operators and abc work on Ticket Machine example
 a. introduce a balance on the TM
 b. introduce putting money into the machine
 c. how shoudl we print a ticket, only when money is in there
 d. modify the print ticket method. 
 
 Cover the use of boolean's to simplify expression writing
 
 For instance having an isPassing boolean that is false and is true only if course grade is greater than a 73
 
 show them how to refund the ticket money
 
 Implement a Password to print out money Collections so that money collections is only printed out if people enter a proper password
 
 Switch statement
 Used to compare discrete values i.e constants
 
 switch(variable){
 case 0:
 
 break;
 case 1:
 
 break;
 default:
 
 break;
 }
 
 String comparisons
 .equals
 .equalsIgnoreCase
 
 .charAt(0)
 .length
 
 
 //Build a random word generator (5 letter words)
		
		//a. have the characters in the word declared
			
		final String letters = "abcdefghijklmnopqrstuvwxyz";

		
		//b. have a random number generator
		
		Random rand = new Random();
		
		//c. use the random generator to get the charAt a random location based on the number of charecters
		
		char char1 = letters.charAt(rand.nextInt(letters.length()));
		char char2 = letters.charAt(rand.nextInt(letters.length()));
		char char3 = letters.charAt(rand.nextInt(letters.length()));
		char char4 = letters.charAt(rand.nextInt(letters.length()));
		char char5 = letters.charAt(rand.nextInt(letters.length()));
		
		//d. concatenate the charecters togeter to get the word
		
		System.out.println(""+char1+char2+char3+char4+char5);
 
 
 

